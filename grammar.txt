program = {funcDecl}
funcDecl = "func" ident paramList ["out" paramList] block
paramList = "(" {ident ":" type ","} [ident ":" type]  ")"
block = "{" {statement} "}"
statement = funcCall
            | varDecl
            | varAssignment
            | ifStatement
            | forStatement
            | jumpStatement
ifStatement = "if" cond block
forStatement = "for" [cond | forClause] block
forClause = [statement] ";" [condition] ";" [statement]
jumpStatement = "continue" | "break" | "return"
varDecl = "let" ident ":" type [assignOp expr]
varAssignment = ident assignOp expr
type = ident ["[" "]"]
funcCall = "func" ident argList
argList = "(" {expr ","} [expr] ")"
// cond should handle >, <, >=, <= ==, !=, &&, ||, (, )
// expr should handle +, -, *, /, ^, (, )


// Missing... class, arrays of arrays, switch, varDeclList, semicolon separators, some operators, ranges