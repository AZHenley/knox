program = funcDecl+
funcDecl = "func" ident paramList ["out" paramList] block
paramList = 
block = "{" statement+ "}"
statement = funcCall
            | varDecl
            | varAssignment
            | ifStatement
            | forStatement
            | jumpStatement
ifStatement = "if" cond block
forStatement = "for" [cond | forClause | forRange] block
jumpStatement = "continue" | "break" | "return"
varDecl = "let" ident ":" type [assignOp expr]
varAssignment = ident assignOp expr
type = ident ["[" "]"]
funcCall = "func" ident argList
paranExpr = "(" expr ")"
// cond is a conditional expr
// expr should handle +, -, *, /, ^, ==, >, <, !=, (, )


// Missing... class, arrays of arrays, switch, varDeclList, semicolon separators, lots of operators