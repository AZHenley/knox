program = {funcDecl}
funcDecl = "func" ident paramList ["out" paramList] block
paramList = "(" {ident ":" type ","} [ident ":" type]  ")"
block = "{" {statement} "}"
statement = funcCall
            | varDecl
            | varAssignment
            | ifStatement
            | forStatement
            | jumpStatement
ifStatement = "if" expr block
forStatement = "for" [expr | forClause] block
forClause = [statement] ";" [expr] ";" [statement]
jumpStatement = "continue" | "break" | "return"
varDecl = "let" ident ":" type [assignOp expr]
varAssignment = ident assignOp expr
type = ident ["[" "]"]
funcCall = "func" ident argList
argList = "(" {expr ","} [expr] ")"


expr = logical
logical = equality {("!=" | "==") equality}
equality = comparison {("!=" | "==") comparison } ;
comparison = addition {(">" | ">=" | "<" | "<=") addition}
addition = multiplication {( "-" | "+" ) multiplication}
multiplication = unary {( "/" | "*" ) unary}
unary = (["!" | "-"] unary) | primary
primary = INT | FLOAT | STRING | "false" | "true" | "nil" | "(" expr ")" ;

// Missing... class, arrays of arrays, switch, varDeclList, semicolon separators, some operators, ranges, lot of literals